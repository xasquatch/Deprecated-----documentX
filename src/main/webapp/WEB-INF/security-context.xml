<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/security"
             xmlns:beans="http://www.springframework.org/schema/beans"
             xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
             xsi:schemaLocation="http://www.springframework.org/schema/beans
             http://www.springframework.org/schema/beans/spring-beans.xsd
             http://www.springframework.org/schema/security
             http://www.springframework.org/schema/security/spring-security.xsd">

    <http auto-config="true" use-expressions="true">
        <intercept-url pattern="/member/**" access="hasAnyRole('ROLE_USER','ROLE_ADMIN')"/>
        <intercept-url pattern="/management/**" access="hasRole('ROLE_ADMIN')"/>
        <intercept-url pattern="/**" access="permitAll"/>
    </http>

    <!--
    #SpEL문법
    hasRole("admin") - admin권한을 가지고 있어야 접근가능
    hasAnyRole("admin", "user") - admin, user권한중 한가지만 가지고 있으면 접근가능
    permitAll - 모두 접근가능
    denyAll - 모두 접근불가능
    isAnonymous() - 인증을 하지 않은 사용자일 경우(로그인하지 않은 사용자)
    isRememberMe() - Remember-me 기능으로 로그인한 사용자일 경우(자동로그인 사용자)
    isAuthenticated() - 인증을 한 사용자일 경우(로그인한 사용자)
    isFullyAuthenticated() - 인증을 한 사용자이면서 Remember-me 기능으로 로그인하지 않은 사용자
    
    -->

    <authentication-manager>
        <authentication-provider>
            <user-service>
                <user name="admin" password="{noop}admin" authorities="ROLE_ADMIN"/>
                <user name="user" password="{noop}user" authorities="ROLE_USER"/>
            </user-service>
        </authentication-provider>
    </authentication-manager>

</beans:beans>